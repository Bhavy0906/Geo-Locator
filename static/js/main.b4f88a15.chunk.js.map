{"version":3,"sources":["components/NavigateUser.js","components/Permission.js","App.js","reportWebVitals.js","index.js"],"names":["NavigateUser","props","state","countryName","countryCode","continentCode","city","region","timeZone","countryCapital","currency","axios","get","then","response","data","console","log","setState","country_name","country_code_iso3","continent_code","timezone","country_capital","currency_name","catch","error","this","position","id","Component","Permission","errorMessage","document","querySelector","style","display","p","createElement","innerHTML","append","loadPage","message","className","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gSAsEeA,E,kDAhEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,eAAgB,GAChBC,SAAU,IAXC,E,qDAenB,WAAqB,IAAD,OAChBC,IAAMC,IAAI,0BACLC,MAAK,SAAAC,GACF,IAAIC,EAAOD,EAASC,KACpBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CACVf,YAAaY,EAAKI,aAClBf,YAAaW,EAAKK,kBAClBf,cAAeU,EAAKM,eACpBf,KAAMS,EAAKT,KACXC,OAAQQ,EAAKR,OACbC,SAAUO,EAAKO,SACfb,eAAgBM,EAAKQ,gBACrBb,SAAUK,EAAKS,mBAGtBC,OAAM,SAAAC,GACHV,QAAQC,IAAIS,Q,oBAIxB,WACI,MAAqGC,KAAKzB,MAAlGC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAA4BE,GAAjD,EAAkCD,cAAlC,EAAiDC,MAAMC,EAAvD,EAAuDA,OAAQC,EAA/D,EAA+DA,SAAUC,EAAzE,EAAyEA,eAAgBC,EAAzF,EAAyFA,SACrFkB,EAAW,GAUf,OARIA,EAAWzB,EASX,qBAAK0B,GAAK,QAAV,SACI,sBAAKA,GAAK,OAAV,UACA,+BAAM,gDAAmBzB,OACzB,+BAAM,gDAAmBwB,OACzB,+BAAM,mDAAsBnB,OAC5B,+BAAM,4CAAeC,OACrB,+BAAM,0CAAaH,OACnB,+BAAM,wCAAWD,OACjB,+BAAM,4CAAeE,gB,GA3DVsB,aC2CZC,E,kDAzCX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IAQV+B,aAAe,WACXC,SAASC,cAAc,cAAcC,MAAMC,QAAU,OACrD,IAAIC,EAAIJ,SAASK,cAAc,KAC/BD,EAAEE,UAAY,oBACdN,SAASC,cAAc,QAAQM,OAAOH,IAbvB,EAgBnBI,SAAW,WACPR,SAASC,cAAc,cAAcC,MAAMC,QAAU,OACzD,EAAKlB,SAAS,CACVwB,QAAU,cAAC,EAAD,OAhBV,EAAKxC,MAAQ,CACRwC,QAAS,IAJC,E,0CAuBnB,WACI,OACI,qCACA,sBAAKC,UAAY,YAAjB,UACI,mBAAGd,GAAK,OAAR,iDACA,wBAAQe,QAAWjB,KAAKc,SAAUE,UAAU,SAA5C,mBAGA,wBAAQC,QAAWjB,KAAKK,aAAcW,UAAY,SAAlD,qBAIHhB,KAAKzB,MAAMwC,e,GArCCZ,aCOVe,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,OCMSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,SAM1BX,M","file":"static/js/main.b4f88a15.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport './styles.css'\r\n\r\nclass NavigateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            countryName: '',\r\n            countryCode: '',\r\n            continentCode: '',\r\n            city: '',\r\n            region: '',\r\n            timeZone: '',\r\n            countryCapital: '',\r\n            currency: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://ipapi.co/json/')\r\n            .then(response => {\r\n                let data = response.data\r\n                console.log(data);\r\n                this.setState({\r\n                    countryName: data.country_name,\r\n                    countryCode: data.country_code_iso3,\r\n                    continentCode: data.continent_code,\r\n                    city: data.city,\r\n                    region: data.region,\r\n                    timeZone: data.timezone,\r\n                    countryCapital: data.country_capital,\r\n                    currency: data.currency_name\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { countryName, countryCode, continentCode, city, region, timeZone, countryCapital, currency} = this.state\r\n        let position = ''\r\n        if (continentCode === 'AS') {\r\n            position = countryName\r\n        } else if (continentCode === 'EU') {\r\n            position = countryName\r\n        } else if (continentCode === 'AF') {\r\n            position = countryName\r\n        } else if (countryCode === 'USA' || countryCode === 'CAN') {\r\n            position = countryName\r\n        } else position = countryName;\r\n        return (\r\n            <div id = 'board'>\r\n                <div id = 'card'>\r\n                <span><b>Country code : {countryCode}</b></span> \r\n                <span><b>Country name : {position}</b></span>\r\n                <span><b>Country capital : {countryCapital}</b></span>\r\n                <span><b>Currency : {currency}</b></span>\r\n                <span><b>region : {region}</b></span>\r\n                <span><b>City : {city}</b></span>\r\n                <span><b>Timezone : {timeZone}</b></span>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigateUser\r\n","import React, { Component } from 'react'\r\nimport NavigateUser from './NavigateUser';\r\nimport './styles.css'\r\n\r\nclass Permission extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             message: ''\r\n        }\r\n    }\r\n    \r\n\r\n    errorMessage = () => {\r\n        document.querySelector('.container').style.display = 'none'\r\n        let p = document.createElement('p');\r\n        p.innerHTML = 'PERMISSION DENIED';\r\n        document.querySelector('.App').append(p);\r\n    }\r\n\r\n    loadPage = () => {\r\n        document.querySelector('.container').style.display = 'none'\r\n    this.setState({\r\n        message : <NavigateUser/>\r\n    })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className = 'container'>\r\n                <p id = 'text'>The site wants to use your location</p>\r\n                <button onClick = {this.loadPage} className='button'>\r\n                    Allow\r\n                </button>\r\n                <button onClick = {this.errorMessage} className = 'button'> \r\n                    Deny\r\n                </button>\r\n            </div>\r\n            {this.state.message}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Permission\r\n","import './App.css';\nimport Permission from './components/Permission';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Permission/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}